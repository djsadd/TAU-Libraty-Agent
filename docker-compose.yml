version: "3"

services:
  # ---------- FastAPI ----------
  web:
    build: .
    container_name: tau-web
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - qdrant
    env_file:
      - .env
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
      --reload
    volumes:
      - ./uploads:/app/uploads   # <-- общий том с локальной папкой uploads

  dramatiq_scheduler:
    build: .
    container_name: dramatiq_scheduler
    command: dramatiq app.tasks --processes 2 --threads 1
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - ./uploads:/app/uploads   # <-- добавлено, чтобы тоже видел файлы

  dramatiq_worker:
    build: .
    container_name: dramatiq_worker
    command: dramatiq app.worker --processes 2 --threads 2
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - ./uploads:/app/uploads   # <-- общий volume для worker

  frontend:
    build:
      context: ./chat-fastapi-client
      dockerfile: Dockerfile.frontend
    environment:
      - REACT_APP_API_URL=http://backend:8000/api/chat
    container_name: tau-frontend
    ports:
      - "80:80"

  # ---------- PostgreSQL ----------
  db:
    image: postgres:15
    container_name: tau-db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ---------- Redis ----------
  redis:
    image: redis:7
    container_name: tau-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # ---------- Qdrant ----------
  qdrant:
    image: qdrant/qdrant:v1.11.0
    container_name: tau-qdrant
    restart: always
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
