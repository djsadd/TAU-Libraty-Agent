import dramatiq
import logging
import asyncio
import json
from app.api.routes.kabis_upload import kabis_upload
import os
import dramatiq
from dramatiq.brokers.redis import RedisBroker
from app.core.config import settings
logger = logging.getLogger(__name__)

broker = RedisBroker(host=settings.REDIS_URL, port=settings.REDIS_PORT, db=0)
dramatiq.set_broker(broker)


@dramatiq.actor(queue_name="index")
def run_kabis_upload_task():
    logger.info("üöÄ –°—Ç–∞—Ä—Ç –∑–∞–¥–∞—á–∏ run_kabis_upload_task")
    try:
        result = asyncio.run(kabis_upload())

        # –ï—Å–ª–∏ —ç—Ç–æ JSONResponse ‚Üí –±–µ—Ä—ë–º body
        if hasattr(result, "body"):
            preview = result.body.decode("utf-8")
        else:
            preview = str(result)

        # –ß—Ç–æ–±—ã –Ω–µ –∑–∞–ª–∏—Ç—å –ª–æ–≥–∏, –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª–∏–Ω—É
        logger.info(f"üìö –†–µ–∑—É–ª—å—Ç–∞—Ç kabis_upload: {preview[:500]}")
        logger.info("‚úÖ –ó–∞–¥–∞—á–∞ run_kabis_upload_task –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ run_kabis_upload_task: {e}", exc_info=True)
